version: '2.2'
services:
    mail:
        image: 'schickling/mailcatcher:latest'
        ports:
            - '${MAILCATCHER_PORT}:1080'
        restart: on-failure
    amqp:
        build:
            context: .docker/rabbitmq@3.9
        ports:
            - '${RABBITMQ_PORT}:5672'
            - '${RABBITMQ_MANAGER_PORT}:15672'
        environment:
            - 'RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}'
            - 'RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}'
        restart: on-failure
    redis:
        build:
            context: .docker/redis@5/
        ports:
            - '${REDIS_PORT}:6379'
        restart: on-failure
    elasticsearch:
        image: 'docker.elastic.co/elasticsearch/elasticsearch:7.16.1'
        ports:
            - '${ELASTICSEARCH_PORT}:9200'
        environment:
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
        volumes:
            - 'elasticsearch:/usr/share/elasticsearch/data'
            - './.docker/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml'
        restart: on-failure
    kibana:
        image: 'docker.elastic.co/kibana/kibana:7.16.1'
        ports:
            - '${KIBANA_PORT}:5601'
        environment:
            - 'monitoring.elasticsearch.hosts=http://elasticsearch:9200'
        volumes:
            - './.docker/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml'
        depends_on:
            - elasticsearch
        restart: on-failure
    logstash:
        image: 'docker.elastic.co/logstash/logstash:7.16.1'
        volumes:
            - './.docker/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml'
            - './.docker/logstash/pipeline:/usr/share/logstash/pipeline/'
        depends_on:
            - elasticsearch
        restart: on-failure
    sql:
        image: 'postgres:14.2-alpine'
        ports:
            - '${DATABASE_PORT}:5432'
        environment:
            - 'POSTGRES_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}'
            - 'POSTGRES_DB=${DATABASE_NAME}'
            - 'POSTGRES_USER=${DATABASE_USER}'
            - 'POSTGRES_PASSWORD=${DATABASE_PASSWORD}'
        volumes:
            - './.docker/postgres@9.6/sql/uuid-ossp.sql:/docker-entrypoint-initdb.d/00-uuid-ossp.sql:ro'
            - 'database:/var/lib/postgresql/data'
        healthcheck:
            test: [CMD-SHELL, 'pg_isready -U$${POSTGRES_USER} -d$${POSTGRES_DB}']
        restart: on-failure
    http:
        image: 'nginx:alpine'
        ports:
            - '${HTTP_PORT}:80'
        volumes:
            - './.docker/nginx@1.15/config/options.conf:/etc/nginx/conf.d/options.conf'
            - './.docker/nginx@1.15/config/vhosts/reverse-proxy.conf:/etc/nginx/conf.d/default.conf'
            - './.docker/nginx@1.15/config/vhosts/prod.conf:/etc/nginx/conf.d/vhost-prod.conf'
            - './.docker/nginx@1.15/config/vhosts/dev.conf:/etc/nginx/conf.d/vhost-dev.conf'
            - './:/var/www/html'
            - './.docker/nginx@1.15/config/vhosts/xdebug.conf:/etc/nginx/conf.d/vhost-xdebug.conf'
        restart: on-failure
    fpm:
        image: 'kiboko/php:8.1-fpm-orocommerce-ee-5.0-postgresql'
        user: 'docker:docker'
        environment:
            - DATABASE_NAME
            - DATABASE_USER
            - DATABASE_PASSWORD
            - WEBSOCKET_PORT
            - RABBITMQ_USER
            - RABBITMQ_PASSWORD
            - I_AM_DEVELOPER_DISABLE_INDEX_IP_CHECK=
        volumes:
            - './:/var/www/html'
        restart: on-failure
    fpm-xdebug:
        image: 'kiboko/php:8.1-fpm-xdebug-orocommerce-ee-5.0-postgresql'
        user: 'docker:docker'
        environment:
            - DATABASE_NAME
            - DATABASE_USER
            - DATABASE_PASSWORD
            - WEBSOCKET_PORT
            - RABBITMQ_USER
            - RABBITMQ_PASSWORD
            - I_AM_DEVELOPER_DISABLE_INDEX_IP_CHECK=
        volumes:
            - './:/var/www/html'
        restart: on-failure
    sh:
        image: 'kiboko/php:8.1-cli-orocommerce-ee-5.0-postgresql'
        user: 'docker:docker'
        environment:
            - DATABASE_NAME
            - DATABASE_USER
            - DATABASE_PASSWORD
            - WEBSOCKET_PORT
            - RABBITMQ_USER
            - RABBITMQ_PASSWORD
            - COMPOSER_AUTH
            - COMPOSER_PROCESS_TIMEOUT
        volumes:
            - '${HOME}/.ssh:/opt/docker/.ssh/'
            - './:/var/www/html'
            - 'composer:/opt/docker/.composer/'
        command:
            - sleep
            - '31536000'
        restart: on-failure
    sh-xdebug:
        image: 'kiboko/php:8.1-cli-xdebug-orocommerce-ee-5.0-postgresql'
        user: 'docker:docker'
        environment:
            - DATABASE_NAME
            - DATABASE_USER
            - DATABASE_PASSWORD
            - WEBSOCKET_PORT
            - RABBITMQ_USER
            - RABBITMQ_PASSWORD
            - COMPOSER_AUTH
            - COMPOSER_PROCESS_TIMEOUT
        volumes:
            - '${HOME}/.ssh:/opt/docker/.ssh/'
            - './:/var/www/html'
            - 'composer:/opt/docker/.composer/'
        command:
            - sleep
            - '31536000'
        restart: on-failure
    mq:
        extends:
            service: sh
        user: 'docker:docker'
        command:
            - bin/console
            - 'oro:message-queue:consume'
            - '--env=prod'
            - '-vv'
        restart: on-failure
    ws:
        extends:
            service: sh
        user: 'docker:docker'
        ports:
            - '${WEBSOCKET_PORT}:8080'
        command:
            - bin/console
            - 'gos:websocket:server'
            - '--env=prod'
            - '-vv'
        restart: on-failure
volumes:
    elasticsearch:
        driver: local
    database:
        driver: local
    composer:
        driver: local
        driver_opts:
            type: tmpfs
            device: tmpfs
            o: 'size=2048m,uid=1000,gid=1000'
